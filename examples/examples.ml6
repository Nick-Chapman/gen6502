
let print_nib x =
  oswrch (index "0123456789abcdef" x)

let hi_nib x = shr (shr (shr (shr (x & 0xff))))
let lo_nib x = x & 0xf

let print_hex x =
  let () = print_nib (hi_nib x) in
  let () = print_nib (lo_nib x) in
  let () = osnewl () in
  ()

let even x = (x & 1) == 0

let collatz_step x =
  if even x
  then shr x
  else shl x + x + 1

let rec collatz_loop x =
  let () = print_hex x in
  if x == 1
  then x
  else
    let x' = collatz_step x in
    collatz_loop x'

let collatz_two_steps x =
  let x = collatz_step x in
  let x = collatz_step x in
  x


let one a =
  a + 1

let two a x =
  a + x

let three a x y =
  a + x + y

let what a =
  (a + 1) + (a + 1)


let bug1 () =
  let a = 43 in
  let t = (a == 42) in
  let u = (a == 43) in
  if t then 11 else 22


let if_equal a b c d =
  if a == b then c else d

let if_less a b c d =
  if a < b then c else d
